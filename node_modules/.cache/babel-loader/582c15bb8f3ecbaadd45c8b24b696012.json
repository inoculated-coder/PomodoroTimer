{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Javal\\\\Thinkful\\\\Qualified\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\session-information\\\\SessionInformation.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"../progress-bar/ProgressBar\";\n/**\n * Displays information about the current session, or nothing if there is no current session.\n *\n * This component violate the law of demeter by knowing too much about the implementation\n * details of the session. A loosely coupled implementation would be better.\n *\n * @param session\n *  a possibly null session object\n * @param isPaused\n *  pass true to display the \"PAUSED\" notification.\n * @returns {JSX.Element|null}\n *  session information or `null` if session === null\n */\n\nfunction SessionInformation({\n  session,\n  isPaused\n}) {\n  if (session === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, `${session.label} for ${session.duration} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, `${secondsToDuration(session.timeRemaining)} remaining`), isPaused && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    percentComplete: session.percentComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n}\n\nSessionInformation.propTypes = {\n  session: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    duration: PropTypes.string.isRequired,\n    timeRemaining: PropTypes.number.isRequired,\n    percentComplete: PropTypes.number.isRequired\n  }),\n  isPaused: PropTypes.bool.isRequired\n};\nexport default SessionInformation;","map":{"version":3,"sources":["C:/Users/Javal/Thinkful/Qualified/Project_Pomodoro_Timer_Qualified_1/src/session-information/SessionInformation.js"],"names":["React","PropTypes","secondsToDuration","ProgressBar","SessionInformation","session","isPaused","label","duration","timeRemaining","percentComplete","propTypes","shape","string","isRequired","number","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA5B,EAAmD;AACjD,MAAID,OAAO,KAAK,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,sBACE,uDAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,GAAEA,OAAO,CAACE,KAAM,QAAOF,OAAO,CAACG,QAAS,UAA1E,CAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEN,iBAAiB,CAACG,OAAO,CAACI,aAAT,CAAwB,YAD/C,CAJF,EAOGH,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPf,CADF,CAFF,eAaE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,eAAe,EAAED,OAAO,CAACK,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAbF,CADF;AAqBD;;AAEDN,kBAAkB,CAACO,SAAnB,GAA+B;AAC7BN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,KAAV,CAAgB;AACvBL,IAAAA,KAAK,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADD;AAEvBN,IAAAA,QAAQ,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAFJ;AAGvBL,IAAAA,aAAa,EAAER,SAAS,CAACc,MAAV,CAAiBD,UAHT;AAIvBJ,IAAAA,eAAe,EAAET,SAAS,CAACc,MAAV,CAAiBD;AAJX,GAAhB,CADoB;AAO7BR,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeF;AAPI,CAA/B;AAUA,eAAeV,kBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"../progress-bar/ProgressBar\";\n\n/**\n * Displays information about the current session, or nothing if there is no current session.\n *\n * This component violate the law of demeter by knowing too much about the implementation\n * details of the session. A loosely coupled implementation would be better.\n *\n * @param session\n *  a possibly null session object\n * @param isPaused\n *  pass true to display the \"PAUSED\" notification.\n * @returns {JSX.Element|null}\n *  session information or `null` if session === null\n */\nfunction SessionInformation({ session, isPaused }) {\n  if (session === null) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* TODO: This area should show only when a focus or break session is running or pauses */}\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          {/* TODO: Update message below to include current session and total duration */}\n          <h2 data-testid=\"session-title\">{`${session.label} for ${session.duration} minutes`}</h2>\n          {/* TODO: Update message below to include time remaining in the current session */}\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {`${secondsToDuration(session.timeRemaining)} remaining`}\n          </p>\n          {isPaused && <h3>PAUSED</h3>}\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <ProgressBar percentComplete={session.percentComplete} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nSessionInformation.propTypes = {\n  session: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    duration: PropTypes.string.isRequired,\n    timeRemaining: PropTypes.number.isRequired,\n    percentComplete: PropTypes.number.isRequired,\n  }),\n  isPaused: PropTypes.bool.isRequired,\n};\n\nexport default SessionInformation;\n"]},"metadata":{},"sourceType":"module"}